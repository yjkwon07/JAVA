<?xml version="1.0" encoding="UTF-8"?>
<beans
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans">
	<!-- 
		action-mybatis.xml을 다음과 같이 작성. 
		스프링의 DataSourceTransactionManager 클래스를 이용해 트랜잭션 처리 빈을 생성한 후, 
		해당 클래스의 DataSource 속성에 dataSource 빈을 '주입'하여 데이터베이스 연동 시 트랜잭션을 적용한다. 
		그리고 txManger 빈에 <tx:annotation-driven> 태그를 설정해 애너테이션을 적용할 수 있게 한다. 
	-->
	<bean id="propertyPlaceholderConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>/WEB-INF/config/jdbc.properties</value>
		</property>
	</bean >

	<bean id="dataSource"
		class="org.apache.ibatis.datasource.pooled.PooledDataSource">
		<property name="driver" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource"> 
			<ref bean="dataSource" />
		</property>
		<property name="mapperLocations"
			value="classpath:mybatis/mappers/*.xml" />
	</bean>

	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0">
			<ref bean="sqlSessionFactory"/>
		</constructor-arg>
	</bean>
 
	<bean id="accDAO" class="com.spring.account.AccountDAO">
		<property name="sqlSession"> 
			<ref bean="sqlSession" />
		</property>
	</bean>
	
	<!-- DataSourceTransactionManager클래스를 이용해 dataSource 빈에 트랜잭션을 적용한다. -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource"> 
			<ref bean="dataSource" /> 
		</property>
	</bean>
	
	<!-- 애너테이션을 사용하여 트랜잭션을 적용하기 위해 txManager 빈을 설정 한다. -->
	<tx:annotation-driven
		transaction-manager="txManager" />
</beans>